diff --git a/index.html b/index.html
index e60fcc1..8b2d788 100644
--- a/index.html
+++ b/index.html
@@ -3,7 +3,7 @@
 	<title></title>
 	<style>
 		.point {background-color: #0088ff; width: 2px; height: 2px; border-radius: 2px; position: absolute;}
-		body {overflow: hidden; background-color: black;}
+		body {overflow: hidden; background-color: black; margin: 0;}
 	</style>
 </head>
 <body>
diff --git a/main.js b/main.js
index e566b9a..4679a80 100644
--- a/main.js
+++ b/main.js
@@ -1,43 +1,81 @@
+class Canvas {
+	constructor(elementId) {
+		const canvas = document.getElementById(elementId);
+		canvas.width = window.innerWidth;
+		canvas.height = window.innerHeight;
+
+		this.canvas = canvas;
+		this.ctx = canvas.getContext("2d");
+	}
+
+	clear() {
+		this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);
+	}
+
+	drawPoint(point) {
+		this.ctx.beginPath();
+		this.ctx.fillStyle = "#0088ff";
+		this.ctx.arc(point.x, point.y, point.RADIUS, 0, 2 * Math.PI);
+		this.ctx.fill();
+	}
+
+	drawLine(point, other) {
+		this.ctx.beginPath();
+		this.ctx.strokeStyle = "#0088ff";
+		this.ctx.moveTo(point.x, point.y);
+		this.ctx.lineTo(other.x, other.y);
+		this.ctx.stroke();
+	}
+}
+
 class Point {
 	constructor() {
-		this.SPEED = 1;
+		this.SPEED = 0.25;
 		this.ANGULAR_SPEED = 0.1;
+		this.RADIUS = 1;
 
 		this.x = Math.floor(Math.random() * window.innerWidth);
 		this.y = Math.floor(Math.random() * window.innerHeight);
 		this.theta = Math.random() * 2 * Math.PI;
-		
-		const div = document.createElement("div");
-		div.className = "point";
-		document.body.appendChild(div);
-		this.div = div;
 	}
 
 	move() {
 		this.theta += this.ANGULAR_SPEED * (2 * Math.random() - 1);
 		this.x = (this.x + this.SPEED * Math.cos(this.theta) + window.innerWidth) % (window.innerWidth - 1);
-		this.y = (this.y + this.SPEED * Math.abs(Math.sin(this.theta)) + window.innerHeight) % (window.innerHeight - 1);
-		this.div.style.left = this.x + "px";
-		this.div.style.top = this.y + "px";
+		this.y = (this.y + this.SPEED * Math.sin(this.theta) + window.innerHeight) % (window.innerHeight - 1);
+	}
+
+	draw() {
+	}
+
+	distanceTo(other) {
+		return Math.sqrt(Math.pow(this.x - other.x, 2) + Math.pow(this.y - other.y, 2));
 	}
 }
 
-const NUM_POINTS = 1000;
+const NUM_POINTS = 100;
 let status = "alive";
 
+const canvas = new Canvas("canvas");
+
 const points = [];
 for (let i = 0; i < NUM_POINTS; i ++) {
 	points.push(new Point());
 }
 
-const canvas = document.getElementById("canvas");
-const ctx = canvas.getContext("2d");
-
-
 function animate() {
 	for (let point of points) {
 		point.move();
+		canvas.drawPoint(point);
+
+		for (let other of points) {
+			if (point.distanceTo(other) < 50) {
+				// Draw canvas line.
+				canvas.drawLine(point, other);
+			}
+		}
 	}
+
 	if (status == "alive") {
 		window.requestAnimationFrame(animate);
 	}
